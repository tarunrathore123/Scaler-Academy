/*

Repeating Sub-Sequence
Problem Description

Given a string A, find if there is any subsequence that repeats itself.

A subsequence of a string is defined as a sequence of characters generated by deleting some characters in the string without 
changing the order of the remaining characters.

NOTE: Sub-sequence length should be greater than or equal to 2.



Problem Constraints
1 <= length(A) <= 100



Input Format
The first and the only argument of input contains a string A.



Output Format
Return an integer, 1 if there is any subsequence which repeat itself else return 0.



Example Input
Input 1:

 A = "abab"
Input 2:

 A = "abba"


Example Output
Output 1:

 1
Output 2:

 0


Example Explanation
Explanation 1:

 "ab" is repeated.
Explanation 2:

 There is no repeating subsequence.

*/


#define MAX_CHAR 256

bool isPalin(string s, int left, int right){
    while (right > left){
        if (s[left++] != s[right--]){
            return false;
        }
    }
    return true;
}

int Solution::anytwo(string s) {
    int n = s.length();
    
    int freq[MAX_CHAR] = {0};
    for (int i = 0; i < n; ++i){
        freq[s[i]]++;
        
        if (freq[s[i]] > 2)
            return true;
    }
    
    int k = 0;
    for (int i = 0; i < n; ++i){
        if (freq[s[i]] > 1){
            s[k++] = s[i];
        }
    }
    s[k] = '\0';
    
    if (isPalin(s, 0, k-1)){
        if (k & 1)
            return s[k/2] == s[k/2 - 1];
            
        return false;
    }
    
    return true;
}
